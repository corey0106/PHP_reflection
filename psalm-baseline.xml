<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.12.0@e42bc4a23f67acba28a23bb09c348e2ff38a1d87">
  <file src="src/Reflection/ReflectionParameter.php">
    <UndefinedPropertyFetch occurrences="1">
      <code>$this-&gt;node-&gt;var-&gt;name</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="src/SourceLocator/Ast/FindReflectionsInTree.php">
    <InternalClass occurrences="1">
      <code>ConstantNodeChecker::assertValidDefineFunctionCall($node)</code>
    </InternalClass>
  </file>
  <file src="src/SourceLocator/SourceStubber/PhpStormStubsSourceStubber.php">
    <InternalClass occurrences="2">
      <code>BuilderHelpers::normalizeValue($constantValue)</code>
      <code>ConstantNodeChecker::assertValidDefineFunctionCall($node)</code>
    </InternalClass>
    <InternalMethod occurrences="1">
      <code>BuilderHelpers::normalizeValue($constantValue)</code>
    </InternalMethod>
  </file>
  <file src="src/SourceLocator/SourceStubber/ReflectionSourceStubber.php">
    <InternalClass occurrences="1">
      <code>BuilderHelpers::normalizeValue($constantReflection-&gt;getValue())</code>
    </InternalClass>
    <InternalMethod occurrences="1">
      <code>BuilderHelpers::normalizeValue($constantReflection-&gt;getValue())</code>
    </InternalMethod>
    <PossiblyNullIterator occurrences="1">
      <code>$classReflection-&gt;getTraitAliases()</code>
    </PossiblyNullIterator>
  </file>
  <file src="src/SourceLocator/Type/AutoloadSourceLocator.php">
    <InternalClass occurrences="1">
      <code>ConstantNodeChecker::assertValidDefineFunctionCall($node)</code>
    </InternalClass>
  </file>
  <file src="src/SourceLocator/Type/Composer/Factory/MakeLocatorForComposerJsonAndInstalledJson.php">
    <InvalidScalarArgument occurrences="2"/>
  </file>
  <file src="src/SourceLocator/Type/DirectoriesSourceLocator.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_string($directory)</code>
    </DocblockTypeContradiction>
  </file>
</files>
